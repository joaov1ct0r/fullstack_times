version: '3.4'

services:
    db:
        image: postgres
        restart: always
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_DATABASE}
            - DATABASE_URL=${DATABASE_URL}`
        volumes:
            - ./backend/postgresDataDev:/var/lib/postgresql/data
        ports:
            - ${DB_PORT}:5432

    api_times_dev:
        container_name: api_times_dev
        build:
            args:
                - NODE_ENV=development
            context: ./backend
            dockerfile: Dockerfile
            target: development
        image: api_times_dev
        volumes:
            - ./scripts/entrypoint_dev.sh:/usr/src/app/
        entrypoint: ['/bin/sh', './src/scripts/entrypoint_dev.sh']
        volumes:
            - ./backend:/usr/src/app
        env_file:
            - .env
        environment:
            - NODE_ENV=${NODE_ENV}
            - SERVER_PORT=${SERVER_PORT}
            - SERVER_HOST=${SERVER_HOST}
        restart: always
        depends_on:
            - db
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}

    react_times_dev:
        container_name: react_times_dev
        build:
            args:
                - NODE_ENV=${NODE_ENV}
            context: ./frontend
            dockerfile: Dockerfile
            target: development
        image: react_times_dev
        depends_on:
            - db
            - api_times_dev
        entrypoint: ['/bin/sh', './src/scripts/entrypoint.sh']
        volumes:
            - ./frontend:/usr/src/app
        env_file:
            - .env
        environment:
            - NODE_ENV=${NODE_ENV}
        restart: always
        ports:
            - 5173:5173
