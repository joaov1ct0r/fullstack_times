version: '3.4'

services:
    db:
        image: postgres
        restart: always
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_DATABASE}
            - DATABASE_URL=${DATABASE_URL}`
        env_file:
            - .env
        volumes:
            - ./scripts:/usr/src/app/scripts
            - ./backend/postgresData:/var/lib/postgresql/data
        ports:
            - ${DB_PORT}:5432

    api_times_prod:
        container_name: api_times_prod
        build:
            args:
                - NODE_ENV=production
            context: ./backend
            dockerfile: Dockerfile
            target: production
        image: api_times_prod
        volumes:
            - ./scripts/entrypoint_dev.sh:/usr/src/app/
        entrypoint: ['/bin/sh', './src/scripts/entrypoint.sh']
        env_file:
            - .env
        environment:
            - NODE_ENV=${NODE_ENV}
            - SERVER_PORT=${SERVER_PORT}
            - SERVER_HOST=${SERVER_HOST}
        restart: always
        depends_on:
            - db
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}

    react_times_prod:
    container_name: react-times_prod
    build:
      args:
        - NODE_ENV=${NODE_ENV}
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    image: react_times_dev
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
    restart: always
    ports:
      - 5173:5173
