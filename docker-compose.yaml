version: '3.4'

services:
    db:
        image: postgres
        restart: always
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_DATABASE}
            - DATABASE_URL='postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}?schema=sample'
        volumes:
            - ./backend/postgresData:/var/lib/postgresql/data
        ports:
            - ${DB_PORT}:5432

    api_times:
        container_name: api_times
        build:
            args:
                - NODE_ENV=production
            context: ./backend
            dockerfile: Dockerfile
            target: production
        image: api_times
        volumes:
            - ./backend/src/scripts:/usr/src/app/src/scripts
        entrypoint: ['/bin/sh', './src/scripts/entrypoint.sh']
        env_file:
            - .env
        environment:
            - NODE_ENV=${NODE_ENV}
            - SERVER_PORT=${SERVER_PORT}
            - SERVER_HOST=${SERVER_HOST}
        restart: always
        depends_on:
            - db
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}

    react_times:
        container_name: react_times
        build:
            args:
                - NODE_ENV=${NODE_ENV}
            context: ./frontend
            dockerfile: Dockerfile
            target: production
        image: react_times
        depends_on:
            - api_times
        entrypoint: ['/bin/sh', './src/scripts/entrypoint.sh']
        volumes:
            - ./frontend/src/scripts:/usr/src/app/src/scripts
        env_file:
            - .env
        environment:
            - NODE_ENV=${NODE_ENV}
        restart: always
        ports:
            - 5173:5173

    nginx:
        depends_on:
            - api_times
            - react_times
        restart: always
        build:
            dockerfile: Dockerfile
            context: ./nginx
        ports:
        - "5173:5173"

